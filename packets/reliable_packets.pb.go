// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: messages/reliable_packets.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReliablePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*ReliablePacket_RegisterPacket
	//	*ReliablePacket_ClientInfoPacket
	//	*ReliablePacket_CreateLobbyRequestPacket
	//	*ReliablePacket_CreateLobbyResponsePacket
	//	*ReliablePacket_JoinLobbyPacket
	//	*ReliablePacket_LobbyPlayerInfo
	//	*ReliablePacket_LobbyInfoPacket
	//	*ReliablePacket_UpdateLobbyPacket
	//	*ReliablePacket_AttemptDirectConnectPacket
	//	*ReliablePacket_ReportDirectConnectResultPacket
	//	*ReliablePacket_AttemptRelayConnectPacket
	//	*ReliablePacket_KickLobbyMemberPacket
	//	*ReliablePacket_KickClientPacket
	//	*ReliablePacket_ChangeNamePacket
	//	*ReliablePacket_ChangeLobbyNamePacket
	//	*ReliablePacket_ChatMessagePacket
	//	*ReliablePacket_LeaveLobbyPacket
	//	*ReliablePacket_RegisterConnectionPacket
	Value isReliablePacket_Value `protobuf_oneof:"value"`
}

func (x *ReliablePacket) Reset() {
	*x = ReliablePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReliablePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReliablePacket) ProtoMessage() {}

func (x *ReliablePacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReliablePacket.ProtoReflect.Descriptor instead.
func (*ReliablePacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{0}
}

func (m *ReliablePacket) GetValue() isReliablePacket_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ReliablePacket) GetRegisterPacket() *RegisterPacket {
	if x, ok := x.GetValue().(*ReliablePacket_RegisterPacket); ok {
		return x.RegisterPacket
	}
	return nil
}

func (x *ReliablePacket) GetClientInfoPacket() *ClientInfoPacket {
	if x, ok := x.GetValue().(*ReliablePacket_ClientInfoPacket); ok {
		return x.ClientInfoPacket
	}
	return nil
}

func (x *ReliablePacket) GetCreateLobbyRequestPacket() *CreateLobbyRequestPacket {
	if x, ok := x.GetValue().(*ReliablePacket_CreateLobbyRequestPacket); ok {
		return x.CreateLobbyRequestPacket
	}
	return nil
}

func (x *ReliablePacket) GetCreateLobbyResponsePacket() *CreateLobbyResponsePacket {
	if x, ok := x.GetValue().(*ReliablePacket_CreateLobbyResponsePacket); ok {
		return x.CreateLobbyResponsePacket
	}
	return nil
}

func (x *ReliablePacket) GetJoinLobbyPacket() *JoinLobbyPacket {
	if x, ok := x.GetValue().(*ReliablePacket_JoinLobbyPacket); ok {
		return x.JoinLobbyPacket
	}
	return nil
}

func (x *ReliablePacket) GetLobbyPlayerInfo() *LobbyPlayerInfo {
	if x, ok := x.GetValue().(*ReliablePacket_LobbyPlayerInfo); ok {
		return x.LobbyPlayerInfo
	}
	return nil
}

func (x *ReliablePacket) GetLobbyInfoPacket() *LobbyInfoPacket {
	if x, ok := x.GetValue().(*ReliablePacket_LobbyInfoPacket); ok {
		return x.LobbyInfoPacket
	}
	return nil
}

func (x *ReliablePacket) GetUpdateLobbyPacket() *UpdateLobbyPacket {
	if x, ok := x.GetValue().(*ReliablePacket_UpdateLobbyPacket); ok {
		return x.UpdateLobbyPacket
	}
	return nil
}

func (x *ReliablePacket) GetAttemptDirectConnectPacket() *AttemptDirectConnectPacket {
	if x, ok := x.GetValue().(*ReliablePacket_AttemptDirectConnectPacket); ok {
		return x.AttemptDirectConnectPacket
	}
	return nil
}

func (x *ReliablePacket) GetReportDirectConnectResultPacket() *ReportDirectConnectResultPacket {
	if x, ok := x.GetValue().(*ReliablePacket_ReportDirectConnectResultPacket); ok {
		return x.ReportDirectConnectResultPacket
	}
	return nil
}

func (x *ReliablePacket) GetAttemptRelayConnectPacket() *AttemptRelayConnectPacket {
	if x, ok := x.GetValue().(*ReliablePacket_AttemptRelayConnectPacket); ok {
		return x.AttemptRelayConnectPacket
	}
	return nil
}

func (x *ReliablePacket) GetKickLobbyMemberPacket() *KickLobbyMemberPacket {
	if x, ok := x.GetValue().(*ReliablePacket_KickLobbyMemberPacket); ok {
		return x.KickLobbyMemberPacket
	}
	return nil
}

func (x *ReliablePacket) GetKickClientPacket() *KickClientPacket {
	if x, ok := x.GetValue().(*ReliablePacket_KickClientPacket); ok {
		return x.KickClientPacket
	}
	return nil
}

func (x *ReliablePacket) GetChangeNamePacket() *ChangeNamePacket {
	if x, ok := x.GetValue().(*ReliablePacket_ChangeNamePacket); ok {
		return x.ChangeNamePacket
	}
	return nil
}

func (x *ReliablePacket) GetChangeLobbyNamePacket() *ChangeLobbyNamePacket {
	if x, ok := x.GetValue().(*ReliablePacket_ChangeLobbyNamePacket); ok {
		return x.ChangeLobbyNamePacket
	}
	return nil
}

func (x *ReliablePacket) GetChatMessagePacket() *ChatMessagePacket {
	if x, ok := x.GetValue().(*ReliablePacket_ChatMessagePacket); ok {
		return x.ChatMessagePacket
	}
	return nil
}

func (x *ReliablePacket) GetLeaveLobbyPacket() *LeaveLobbyPacket {
	if x, ok := x.GetValue().(*ReliablePacket_LeaveLobbyPacket); ok {
		return x.LeaveLobbyPacket
	}
	return nil
}

func (x *ReliablePacket) GetRegisterConnectionPacket() *RegisterConnectionPacket {
	if x, ok := x.GetValue().(*ReliablePacket_RegisterConnectionPacket); ok {
		return x.RegisterConnectionPacket
	}
	return nil
}

type isReliablePacket_Value interface {
	isReliablePacket_Value()
}

type ReliablePacket_RegisterPacket struct {
	RegisterPacket *RegisterPacket `protobuf:"bytes,1,opt,name=registerPacket,proto3,oneof"`
}

type ReliablePacket_ClientInfoPacket struct {
	ClientInfoPacket *ClientInfoPacket `protobuf:"bytes,2,opt,name=clientInfoPacket,proto3,oneof"`
}

type ReliablePacket_CreateLobbyRequestPacket struct {
	CreateLobbyRequestPacket *CreateLobbyRequestPacket `protobuf:"bytes,3,opt,name=createLobbyRequestPacket,proto3,oneof"`
}

type ReliablePacket_CreateLobbyResponsePacket struct {
	CreateLobbyResponsePacket *CreateLobbyResponsePacket `protobuf:"bytes,4,opt,name=createLobbyResponsePacket,proto3,oneof"`
}

type ReliablePacket_JoinLobbyPacket struct {
	JoinLobbyPacket *JoinLobbyPacket `protobuf:"bytes,5,opt,name=joinLobbyPacket,proto3,oneof"`
}

type ReliablePacket_LobbyPlayerInfo struct {
	LobbyPlayerInfo *LobbyPlayerInfo `protobuf:"bytes,6,opt,name=lobbyPlayerInfo,proto3,oneof"`
}

type ReliablePacket_LobbyInfoPacket struct {
	LobbyInfoPacket *LobbyInfoPacket `protobuf:"bytes,7,opt,name=lobbyInfoPacket,proto3,oneof"`
}

type ReliablePacket_UpdateLobbyPacket struct {
	UpdateLobbyPacket *UpdateLobbyPacket `protobuf:"bytes,8,opt,name=updateLobbyPacket,proto3,oneof"`
}

type ReliablePacket_AttemptDirectConnectPacket struct {
	AttemptDirectConnectPacket *AttemptDirectConnectPacket `protobuf:"bytes,9,opt,name=attemptDirectConnectPacket,proto3,oneof"`
}

type ReliablePacket_ReportDirectConnectResultPacket struct {
	ReportDirectConnectResultPacket *ReportDirectConnectResultPacket `protobuf:"bytes,10,opt,name=reportDirectConnectResultPacket,proto3,oneof"`
}

type ReliablePacket_AttemptRelayConnectPacket struct {
	AttemptRelayConnectPacket *AttemptRelayConnectPacket `protobuf:"bytes,11,opt,name=attemptRelayConnectPacket,proto3,oneof"`
}

type ReliablePacket_KickLobbyMemberPacket struct {
	KickLobbyMemberPacket *KickLobbyMemberPacket `protobuf:"bytes,12,opt,name=kickLobbyMemberPacket,proto3,oneof"`
}

type ReliablePacket_KickClientPacket struct {
	KickClientPacket *KickClientPacket `protobuf:"bytes,13,opt,name=kickClientPacket,proto3,oneof"`
}

type ReliablePacket_ChangeNamePacket struct {
	ChangeNamePacket *ChangeNamePacket `protobuf:"bytes,14,opt,name=changeNamePacket,proto3,oneof"`
}

type ReliablePacket_ChangeLobbyNamePacket struct {
	ChangeLobbyNamePacket *ChangeLobbyNamePacket `protobuf:"bytes,15,opt,name=changeLobbyNamePacket,proto3,oneof"`
}

type ReliablePacket_ChatMessagePacket struct {
	ChatMessagePacket *ChatMessagePacket `protobuf:"bytes,16,opt,name=chatMessagePacket,proto3,oneof"`
}

type ReliablePacket_LeaveLobbyPacket struct {
	LeaveLobbyPacket *LeaveLobbyPacket `protobuf:"bytes,17,opt,name=leaveLobbyPacket,proto3,oneof"`
}

type ReliablePacket_RegisterConnectionPacket struct {
	RegisterConnectionPacket *RegisterConnectionPacket `protobuf:"bytes,18,opt,name=registerConnectionPacket,proto3,oneof"`
}

func (*ReliablePacket_RegisterPacket) isReliablePacket_Value() {}

func (*ReliablePacket_ClientInfoPacket) isReliablePacket_Value() {}

func (*ReliablePacket_CreateLobbyRequestPacket) isReliablePacket_Value() {}

func (*ReliablePacket_CreateLobbyResponsePacket) isReliablePacket_Value() {}

func (*ReliablePacket_JoinLobbyPacket) isReliablePacket_Value() {}

func (*ReliablePacket_LobbyPlayerInfo) isReliablePacket_Value() {}

func (*ReliablePacket_LobbyInfoPacket) isReliablePacket_Value() {}

func (*ReliablePacket_UpdateLobbyPacket) isReliablePacket_Value() {}

func (*ReliablePacket_AttemptDirectConnectPacket) isReliablePacket_Value() {}

func (*ReliablePacket_ReportDirectConnectResultPacket) isReliablePacket_Value() {}

func (*ReliablePacket_AttemptRelayConnectPacket) isReliablePacket_Value() {}

func (*ReliablePacket_KickLobbyMemberPacket) isReliablePacket_Value() {}

func (*ReliablePacket_KickClientPacket) isReliablePacket_Value() {}

func (*ReliablePacket_ChangeNamePacket) isReliablePacket_Value() {}

func (*ReliablePacket_ChangeLobbyNamePacket) isReliablePacket_Value() {}

func (*ReliablePacket_ChatMessagePacket) isReliablePacket_Value() {}

func (*ReliablePacket_LeaveLobbyPacket) isReliablePacket_Value() {}

func (*ReliablePacket_RegisterConnectionPacket) isReliablePacket_Value() {}

// Sent from client to server to register a new user
type RegisterPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *RegisterPacket) Reset() {
	*x = RegisterPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPacket) ProtoMessage() {}

func (x *RegisterPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPacket.ProtoReflect.Descriptor instead.
func (*RegisterPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPacket) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Sent from server to client to indicate that the registration was successful
type ClientInfoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint32 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *ClientInfoPacket) Reset() {
	*x = ClientInfoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfoPacket) ProtoMessage() {}

func (x *ClientInfoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfoPacket.ProtoReflect.Descriptor instead.
func (*ClientInfoPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{2}
}

func (x *ClientInfoPacket) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

// Sent from client to server to request to create a lobby
type CreateLobbyRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyName string `protobuf:"bytes,1,opt,name=lobbyName,proto3" json:"lobbyName,omitempty"`
}

func (x *CreateLobbyRequestPacket) Reset() {
	*x = CreateLobbyRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLobbyRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLobbyRequestPacket) ProtoMessage() {}

func (x *CreateLobbyRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLobbyRequestPacket.ProtoReflect.Descriptor instead.
func (*CreateLobbyRequestPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLobbyRequestPacket) GetLobbyName() string {
	if x != nil {
		return x.LobbyName
	}
	return ""
}

// Sent from server to client to indicate that the lobby was created successfully
type CreateLobbyResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyCode string `protobuf:"bytes,1,opt,name=lobbyCode,proto3" json:"lobbyCode,omitempty"` // This will be a six character codee
}

func (x *CreateLobbyResponsePacket) Reset() {
	*x = CreateLobbyResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLobbyResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLobbyResponsePacket) ProtoMessage() {}

func (x *CreateLobbyResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLobbyResponsePacket.ProtoReflect.Descriptor instead.
func (*CreateLobbyResponsePacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLobbyResponsePacket) GetLobbyCode() string {
	if x != nil {
		return x.LobbyCode
	}
	return ""
}

// Sent from client to server to request to join a lobby
type JoinLobbyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyCode string `protobuf:"bytes,1,opt,name=lobbyCode,proto3" json:"lobbyCode,omitempty"`
}

func (x *JoinLobbyPacket) Reset() {
	*x = JoinLobbyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinLobbyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinLobbyPacket) ProtoMessage() {}

func (x *JoinLobbyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinLobbyPacket.ProtoReflect.Descriptor instead.
func (*JoinLobbyPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{5}
}

func (x *JoinLobbyPacket) GetLobbyCode() string {
	if x != nil {
		return x.LobbyCode
	}
	return ""
}

type LobbyPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   uint32 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
}

func (x *LobbyPlayerInfo) Reset() {
	*x = LobbyPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyPlayerInfo) ProtoMessage() {}

func (x *LobbyPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyPlayerInfo.ProtoReflect.Descriptor instead.
func (*LobbyPlayerInfo) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{6}
}

func (x *LobbyPlayerInfo) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *LobbyPlayerInfo) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// Send from server to client to indicate that the client joined a lobby successfully
type LobbyInfoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId       uint32           `protobuf:"varint,1,opt,name=lobbyId,proto3" json:"lobbyId,omitempty"`
	LobbyCode     string           `protobuf:"bytes,2,opt,name=lobbyCode,proto3" json:"lobbyCode,omitempty"`
	LobbyName     string           `protobuf:"bytes,3,opt,name=lobbyName,proto3" json:"lobbyName,omitempty"`
	PlayerOneInfo *LobbyPlayerInfo `protobuf:"bytes,4,opt,name=playerOneInfo,proto3" json:"playerOneInfo,omitempty"`
	PlayerTwoInfo *LobbyPlayerInfo `protobuf:"bytes,5,opt,name=playerTwoInfo,proto3" json:"playerTwoInfo,omitempty"`
}

func (x *LobbyInfoPacket) Reset() {
	*x = LobbyInfoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyInfoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyInfoPacket) ProtoMessage() {}

func (x *LobbyInfoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyInfoPacket.ProtoReflect.Descriptor instead.
func (*LobbyInfoPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{7}
}

func (x *LobbyInfoPacket) GetLobbyId() uint32 {
	if x != nil {
		return x.LobbyId
	}
	return 0
}

func (x *LobbyInfoPacket) GetLobbyCode() string {
	if x != nil {
		return x.LobbyCode
	}
	return ""
}

func (x *LobbyInfoPacket) GetLobbyName() string {
	if x != nil {
		return x.LobbyName
	}
	return ""
}

func (x *LobbyInfoPacket) GetPlayerOneInfo() *LobbyPlayerInfo {
	if x != nil {
		return x.PlayerOneInfo
	}
	return nil
}

func (x *LobbyInfoPacket) GetPlayerTwoInfo() *LobbyPlayerInfo {
	if x != nil {
		return x.PlayerTwoInfo
	}
	return nil
}

// Send from server to client to indicate a change in lobby state
type UpdateLobbyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerOneInfo *LobbyPlayerInfo `protobuf:"bytes,1,opt,name=playerOneInfo,proto3" json:"playerOneInfo,omitempty"`
	PlayerTwoInfo *LobbyPlayerInfo `protobuf:"bytes,2,opt,name=playerTwoInfo,proto3" json:"playerTwoInfo,omitempty"`
	LobbyName     string           `protobuf:"bytes,3,opt,name=lobbyName,proto3" json:"lobbyName,omitempty"`
}

func (x *UpdateLobbyPacket) Reset() {
	*x = UpdateLobbyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLobbyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLobbyPacket) ProtoMessage() {}

func (x *UpdateLobbyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLobbyPacket.ProtoReflect.Descriptor instead.
func (*UpdateLobbyPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLobbyPacket) GetPlayerOneInfo() *LobbyPlayerInfo {
	if x != nil {
		return x.PlayerOneInfo
	}
	return nil
}

func (x *UpdateLobbyPacket) GetPlayerTwoInfo() *LobbyPlayerInfo {
	if x != nil {
		return x.PlayerTwoInfo
	}
	return nil
}

func (x *UpdateLobbyPacket) GetLobbyName() string {
	if x != nil {
		return x.LobbyName
	}
	return ""
}

// Sent from server to lobby clients to inform them to attempt to connect directly
type AttemptDirectConnectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerAddress string `protobuf:"bytes,1,opt,name=peerAddress,proto3" json:"peerAddress,omitempty"`
}

func (x *AttemptDirectConnectPacket) Reset() {
	*x = AttemptDirectConnectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttemptDirectConnectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttemptDirectConnectPacket) ProtoMessage() {}

func (x *AttemptDirectConnectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttemptDirectConnectPacket.ProtoReflect.Descriptor instead.
func (*AttemptDirectConnectPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{9}
}

func (x *AttemptDirectConnectPacket) GetPeerAddress() string {
	if x != nil {
		return x.PeerAddress
	}
	return ""
}

// Sent from client to server to indicate that the client connected directly to the peer
type ReportDirectConnectResultPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ReportDirectConnectResultPacket) Reset() {
	*x = ReportDirectConnectResultPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDirectConnectResultPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDirectConnectResultPacket) ProtoMessage() {}

func (x *ReportDirectConnectResultPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDirectConnectResultPacket.ProtoReflect.Descriptor instead.
func (*ReportDirectConnectResultPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{10}
}

func (x *ReportDirectConnectResultPacket) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Sent from server to lobby clients to inform them to attempt to connect via the relay server
type AttemptRelayConnectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelayAddress string `protobuf:"bytes,1,opt,name=relayAddress,proto3" json:"relayAddress,omitempty"`
}

func (x *AttemptRelayConnectPacket) Reset() {
	*x = AttemptRelayConnectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttemptRelayConnectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttemptRelayConnectPacket) ProtoMessage() {}

func (x *AttemptRelayConnectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttemptRelayConnectPacket.ProtoReflect.Descriptor instead.
func (*AttemptRelayConnectPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{11}
}

func (x *AttemptRelayConnectPacket) GetRelayAddress() string {
	if x != nil {
		return x.RelayAddress
	}
	return ""
}

// Sent from client to server to kick a lobby member
type KickLobbyMemberPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId uint32 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *KickLobbyMemberPacket) Reset() {
	*x = KickLobbyMemberPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickLobbyMemberPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickLobbyMemberPacket) ProtoMessage() {}

func (x *KickLobbyMemberPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickLobbyMemberPacket.ProtoReflect.Descriptor instead.
func (*KickLobbyMemberPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{12}
}

func (x *KickLobbyMemberPacket) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// Sent from server to client to indicate that the client was kicked from the lobby
type KickClientPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickClientPacket) Reset() {
	*x = KickClientPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickClientPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickClientPacket) ProtoMessage() {}

func (x *KickClientPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickClientPacket.ProtoReflect.Descriptor instead.
func (*KickClientPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{13}
}

// Sent from client to server to change the client's name
type ChangeNamePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewName string `protobuf:"bytes,1,opt,name=newName,proto3" json:"newName,omitempty"`
}

func (x *ChangeNamePacket) Reset() {
	*x = ChangeNamePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNamePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNamePacket) ProtoMessage() {}

func (x *ChangeNamePacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNamePacket.ProtoReflect.Descriptor instead.
func (*ChangeNamePacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeNamePacket) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

// Sent from client to server to change the lobby's name
type ChangeLobbyNamePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewName string `protobuf:"bytes,1,opt,name=newName,proto3" json:"newName,omitempty"`
}

func (x *ChangeLobbyNamePacket) Reset() {
	*x = ChangeLobbyNamePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeLobbyNamePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLobbyNamePacket) ProtoMessage() {}

func (x *ChangeLobbyNamePacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLobbyNamePacket.ProtoReflect.Descriptor instead.
func (*ChangeLobbyNamePacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeLobbyNamePacket) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

// Sent from client to server to send a chat message
type ChatMessagePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderName string `protobuf:"bytes,1,opt,name=senderName,proto3" json:"senderName,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatMessagePacket) Reset() {
	*x = ChatMessagePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessagePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessagePacket) ProtoMessage() {}

func (x *ChatMessagePacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessagePacket.ProtoReflect.Descriptor instead.
func (*ChatMessagePacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{16}
}

func (x *ChatMessagePacket) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ChatMessagePacket) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Sent from client to server to leave the lobby
type LeaveLobbyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveLobbyPacket) Reset() {
	*x = LeaveLobbyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveLobbyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveLobbyPacket) ProtoMessage() {}

func (x *LeaveLobbyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveLobbyPacket.ProtoReflect.Descriptor instead.
func (*LeaveLobbyPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{17}
}

type RegisterConnectionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint32 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *RegisterConnectionPacket) Reset() {
	*x = RegisterConnectionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_reliable_packets_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterConnectionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterConnectionPacket) ProtoMessage() {}

func (x *RegisterConnectionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_messages_reliable_packets_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterConnectionPacket.ProtoReflect.Descriptor instead.
func (*RegisterConnectionPacket) Descriptor() ([]byte, []int) {
	return file_messages_reliable_packets_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterConnectionPacket) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

var File_messages_reliable_packets_proto protoreflect.FileDescriptor

var file_messages_reliable_packets_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x6c, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x0a, 0x0a, 0x0e, 0x52,
	0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a,
	0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x18, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x5a, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3c,
	0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6a, 0x6f, 0x69,
	0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x0f,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x5d, 0x0a, 0x1a,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x1a, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x6c, 0x0a, 0x1f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x5a, 0x0a, 0x19, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x19, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x6b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x15,
	0x6b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x10, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x18,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x04, 0x90, 0x82, 0x19, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x36, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x77, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x62, 0x62,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x3f, 0x0a, 0x19, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x33, 0x0a, 0x15, 0x4b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x4b, 0x69, 0x63, 0x6b,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2c, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0x36, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_reliable_packets_proto_rawDescOnce sync.Once
	file_messages_reliable_packets_proto_rawDescData = file_messages_reliable_packets_proto_rawDesc
)

func file_messages_reliable_packets_proto_rawDescGZIP() []byte {
	file_messages_reliable_packets_proto_rawDescOnce.Do(func() {
		file_messages_reliable_packets_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_reliable_packets_proto_rawDescData)
	})
	return file_messages_reliable_packets_proto_rawDescData
}

var file_messages_reliable_packets_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_messages_reliable_packets_proto_goTypes = []interface{}{
	(*ReliablePacket)(nil),                  // 0: ReliablePacket
	(*RegisterPacket)(nil),                  // 1: RegisterPacket
	(*ClientInfoPacket)(nil),                // 2: ClientInfoPacket
	(*CreateLobbyRequestPacket)(nil),        // 3: CreateLobbyRequestPacket
	(*CreateLobbyResponsePacket)(nil),       // 4: CreateLobbyResponsePacket
	(*JoinLobbyPacket)(nil),                 // 5: JoinLobbyPacket
	(*LobbyPlayerInfo)(nil),                 // 6: LobbyPlayerInfo
	(*LobbyInfoPacket)(nil),                 // 7: LobbyInfoPacket
	(*UpdateLobbyPacket)(nil),               // 8: UpdateLobbyPacket
	(*AttemptDirectConnectPacket)(nil),      // 9: AttemptDirectConnectPacket
	(*ReportDirectConnectResultPacket)(nil), // 10: ReportDirectConnectResultPacket
	(*AttemptRelayConnectPacket)(nil),       // 11: AttemptRelayConnectPacket
	(*KickLobbyMemberPacket)(nil),           // 12: KickLobbyMemberPacket
	(*KickClientPacket)(nil),                // 13: KickClientPacket
	(*ChangeNamePacket)(nil),                // 14: ChangeNamePacket
	(*ChangeLobbyNamePacket)(nil),           // 15: ChangeLobbyNamePacket
	(*ChatMessagePacket)(nil),               // 16: ChatMessagePacket
	(*LeaveLobbyPacket)(nil),                // 17: LeaveLobbyPacket
	(*RegisterConnectionPacket)(nil),        // 18: RegisterConnectionPacket
}
var file_messages_reliable_packets_proto_depIdxs = []int32{
	1,  // 0: ReliablePacket.registerPacket:type_name -> RegisterPacket
	2,  // 1: ReliablePacket.clientInfoPacket:type_name -> ClientInfoPacket
	3,  // 2: ReliablePacket.createLobbyRequestPacket:type_name -> CreateLobbyRequestPacket
	4,  // 3: ReliablePacket.createLobbyResponsePacket:type_name -> CreateLobbyResponsePacket
	5,  // 4: ReliablePacket.joinLobbyPacket:type_name -> JoinLobbyPacket
	6,  // 5: ReliablePacket.lobbyPlayerInfo:type_name -> LobbyPlayerInfo
	7,  // 6: ReliablePacket.lobbyInfoPacket:type_name -> LobbyInfoPacket
	8,  // 7: ReliablePacket.updateLobbyPacket:type_name -> UpdateLobbyPacket
	9,  // 8: ReliablePacket.attemptDirectConnectPacket:type_name -> AttemptDirectConnectPacket
	10, // 9: ReliablePacket.reportDirectConnectResultPacket:type_name -> ReportDirectConnectResultPacket
	11, // 10: ReliablePacket.attemptRelayConnectPacket:type_name -> AttemptRelayConnectPacket
	12, // 11: ReliablePacket.kickLobbyMemberPacket:type_name -> KickLobbyMemberPacket
	13, // 12: ReliablePacket.kickClientPacket:type_name -> KickClientPacket
	14, // 13: ReliablePacket.changeNamePacket:type_name -> ChangeNamePacket
	15, // 14: ReliablePacket.changeLobbyNamePacket:type_name -> ChangeLobbyNamePacket
	16, // 15: ReliablePacket.chatMessagePacket:type_name -> ChatMessagePacket
	17, // 16: ReliablePacket.leaveLobbyPacket:type_name -> LeaveLobbyPacket
	18, // 17: ReliablePacket.registerConnectionPacket:type_name -> RegisterConnectionPacket
	6,  // 18: LobbyInfoPacket.playerOneInfo:type_name -> LobbyPlayerInfo
	6,  // 19: LobbyInfoPacket.playerTwoInfo:type_name -> LobbyPlayerInfo
	6,  // 20: UpdateLobbyPacket.playerOneInfo:type_name -> LobbyPlayerInfo
	6,  // 21: UpdateLobbyPacket.playerTwoInfo:type_name -> LobbyPlayerInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_messages_reliable_packets_proto_init() }
func file_messages_reliable_packets_proto_init() {
	if File_messages_reliable_packets_proto != nil {
		return
	}
	file_messages_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_reliable_packets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReliablePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLobbyRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLobbyResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinLobbyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyInfoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLobbyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttemptDirectConnectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDirectConnectResultPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttemptRelayConnectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickLobbyMemberPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickClientPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNamePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeLobbyNamePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessagePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveLobbyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_reliable_packets_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterConnectionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_reliable_packets_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ReliablePacket_RegisterPacket)(nil),
		(*ReliablePacket_ClientInfoPacket)(nil),
		(*ReliablePacket_CreateLobbyRequestPacket)(nil),
		(*ReliablePacket_CreateLobbyResponsePacket)(nil),
		(*ReliablePacket_JoinLobbyPacket)(nil),
		(*ReliablePacket_LobbyPlayerInfo)(nil),
		(*ReliablePacket_LobbyInfoPacket)(nil),
		(*ReliablePacket_UpdateLobbyPacket)(nil),
		(*ReliablePacket_AttemptDirectConnectPacket)(nil),
		(*ReliablePacket_ReportDirectConnectResultPacket)(nil),
		(*ReliablePacket_AttemptRelayConnectPacket)(nil),
		(*ReliablePacket_KickLobbyMemberPacket)(nil),
		(*ReliablePacket_KickClientPacket)(nil),
		(*ReliablePacket_ChangeNamePacket)(nil),
		(*ReliablePacket_ChangeLobbyNamePacket)(nil),
		(*ReliablePacket_ChatMessagePacket)(nil),
		(*ReliablePacket_LeaveLobbyPacket)(nil),
		(*ReliablePacket_RegisterConnectionPacket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_reliable_packets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_reliable_packets_proto_goTypes,
		DependencyIndexes: file_messages_reliable_packets_proto_depIdxs,
		MessageInfos:      file_messages_reliable_packets_proto_msgTypes,
	}.Build()
	File_messages_reliable_packets_proto = out.File
	file_messages_reliable_packets_proto_rawDesc = nil
	file_messages_reliable_packets_proto_goTypes = nil
	file_messages_reliable_packets_proto_depIdxs = nil
}
